{"version":3,"sources":["components/AccountBalance.js","components/NavigationLinks.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Debit.js","components/Credit.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","className","style","fontSize","this","props","accountBalance","Component","NavigationLinks","forView","to","textDecoration","Home","src","alt","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogin","redirect","password","onSubmit","htmlFor","type","onChange","id","Debit","debitsListItems","debits","map","debit","index","key","toString","amount","description","date","slice","addDebit","Credit","creditListItems","credits","credit","addCredit","App","getTodayDate","today","Date","year","getFullYear","month","getMonth","length","day","getDate","mockLogIn","logInfo","newUser","currentUser","event","parseFloat","newDebit","push","toFixed","newCredit","a","axios","get","data","debitSum","creditSum","forEach","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.484264c1.chunk.js","sourcesContent":["// src/components/AccountBalance.js\n\nimport React, {Component} from 'react';\n\n//This component takes the bank balance as a prop\nclass AccountBalance extends Component {\n    render() {\n        return (\n            <div className=\"balance\">\n                <p style={{fontSize: 'large'}}> Balance: {this.props.accountBalance} </p>\n            </div>\n        );\n    }\n}\n\nexport default AccountBalance;","import {Link} from 'react-router-dom'\n// Link component allows us to add a link to a path or url\nimport \"./css/NavigationLinks.css\"\n// This component returns links for the views together\nfunction NavigationLinks(props) {\n    if(props.forView === \"Home\") {\n        return (\n            <div className=\"homeNav\">\n                <span> <Link to=\"/login\" style={{textDecoration:\"none\"}}>Log in</Link> </span>\n                <span> <Link to=\"/userProfile\" style={{textDecoration:\"none\"}}>User Profile</Link> </span> \n                <span> <Link to= \"/debits\" style={{textDecoration:\"none\"}}>Debits</Link> </span>\n                <span> <Link to= \"/credits\" style={{textDecoration:\"none\"}}>Credits</Link>  </span>\n            </div>\n        ); \n    }  \n    else if(props.forView === \"Debit\") {\n        return (\n            <div className=\"debitNav\">\n                <span> <Link to=\"/login\" style={{textDecoration:\"none\"}}>Log in</Link> </span>\n                <span> <Link to=\"/userProfile\" style={{textDecoration:\"none\"}}>User Profile</Link> </span> \n                <span> <Link to= \"/credits\" style={{textDecoration:\"none\"}}>Credits</Link>  </span>\n                <span> <Link to= \"/\" style={{textDecoration:\"none\"}}>Home</Link> </span>\n            </div>\n        );\n    }\n    else if(props.forView === \"Credit\") {\n        return (\n            <div className=\"creditNav\">\n                <span> <Link to=\"/login\" style={{textDecoration:\"none\"}}>Log in</Link> </span>\n                <span> <Link to=\"/userProfile\" style={{textDecoration:\"none\"}}>User Profile</Link> </span> \n                <span> <Link to= \"/debits\" style={{textDecoration:\"none\"}}>Debits</Link> </span>\n                <span> <Link to= \"/\" style={{textDecoration:\"none\"}}>Home</Link> </span>\n            </div>\n        );\n    }\n    else if(props.forView === \"Login\") {\n        return (\n        <div className=\"loginNav\">\n            <span> <Link to= \"/\" style={{textDecoration:\"none\"}}> Back Home</Link> </span>\n        </div>\n        );\n    }\n    else if(props.forView === \"UserProfile\") {\n        return (\n            <div className=\"userProfileNav\">\n                <span> <Link to=\"/login\" style={{textDecoration:\"none\"}}>Log in</Link> </span>\n                <span> <Link to= \"/debits\" style={{textDecoration:\"none\"}}>Debits</Link> </span>\n                <span> <Link to= \"/credits\" style={{textDecoration:\"none\"}}>Credits</Link>  </span>\n                <span> <Link to= \"/\" style={{textDecoration:\"none\"}}>Home</Link> </span>\n            </div>\n        );\n    }\n}\n\nexport default NavigationLinks;","// src/components/Home.js\nimport \"./css/Home.css\"\nimport React, { Component } from 'react';\nimport AccountBalance from './AccountBalance';\nimport NavigationLinks from \"./NavigationLinks\";\n\n\nclass Home extends Component {\n    render() {\n        return (\n            <div className=\"Home\">\n                <img src=\"bank.jpeg\" alt=\"bank\"/>\n                <h1>Bank of React</h1>\n\n                <NavigationLinks forView=\"Home\"/> {/* the nagivation links to other views */}\n\n                <h2> Account Balance</h2>\n                <AccountBalance accountBalance= {this.props.accountBalance} />\n            </div>\n        );\n    }\n}\n\nexport default Home;","// src/components/UserProfile.js\n\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport './css/UserProfile.css'\nimport NavigationLinks from './NavigationLinks';\n\nclass UserProfile extends Component {\n    render() {\n        return(\n            <div className='UserProfile'>\n                <img src=\"bank.jpeg\" alt=\"bank\"/>\n                <h1> User Profile</h1>\n\n                <div className=\"userName\"> Username: {this.props.userName} </div>\n                <div className=\"memberSince\"> Member Since: {this.props.memberSince} </div>\n\n                <NavigationLinks forView=\"UserProfile\"/>\n                <AccountBalance accountBalance={this.props.accountBalance}/>\n            </div>\n        );\n    }\n}\n\nexport default UserProfile;","// Login.js\nimport React, { Component } from 'react';\nimport { Redirect} from 'react-router-dom';\nimport \"./css/Login.css\"\nimport NavigationLinks from './NavigationLinks';\n\nclass LogIn extends Component {\n\n    constructor () {\n        super();\n        this.state = {\n            user: {\n                userName: '',\n                password: ''\n            },\n            redirect: false //keeps track of wheter to redirect to userProfile component or not\n        }\n    }\n    //handles changes in the username input field by updating the userName property of user with the new username value\n    handleChange = (e) => {\n        const updatedUser = {...this.state.user} //creates a new copy of the this.state.user object\n        const inputField = e.target.name\n        const inputValue = e.target.value\n        updatedUser[inputField] = inputValue\n        \n        this.setState({user: updatedUser}) //set this.state.user to the updatedUser object\n        \n    }\n    //called when user clicks on the \"Log In\" button \n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.mockLogin(this.state.user);\n        this.setState({redirect: true})\n    }\n\n\n    render() {\n        //if redirect == true, then render the redirect component which will redirect to the user profile\n        if(this.state.redirect) {\n            return (<Redirect to=\"/userProfile\"/>)\n        }\n        //else\n        return (\n            <div className=\"Login\">\n                <img src=\"bank.jpeg\" alt=\"bank\"/>\n                <h1> Log In </h1>\n                <form onSubmit={this.handleSubmit}>\n                    <div> \n                        <label htmlFor=\"userName\">User Name</label>\n                        <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName}/>\n                    </div>\n                    <div>\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"text\" name=\"password\" />\n                    </div>\n                    <button id=\"LoginButton\">Log In</button>\n                </form>\n                <NavigationLinks forView=\"Login\"/>\n            </div>\n        );\n    }\n\n}\n\nexport default LogIn;","// Debit component\nimport AccountBalance from \"./AccountBalance\";\nimport NavigationLinks from \"./NavigationLinks\"\nimport \"./css/Debit.css\"\n\n// We can define the debit component as a function since we don't need to deal with state for this view\nfunction Debit(props) {\n    // props = { addDebit: this.addDebit, debits: this.state.debits, accountBalance: this.state.accountBalance } (this refers to App component)\n    const debitsListItems = props.debits.map((debit, index) => {\n        let key = \"\"\n        if (debit.id === \"\") { //if the debit object doesn't have an id, make its index the key for mapping\n            key = index.toString()\n        }\n        else {\n            key = debit.id\n        }\n        return ( <li key={key}> {debit.amount} {debit.description} {debit.date.slice(0,10)} </li> );\n    });\n\n\n    //returns the view to render/display\n    return(\n        <div className=\"Debits\">\n            <img src=\"bank.jpeg\" alt=\"bank\"/>\n            <h1> DEBITS </h1>\n            <div className=\"debitsList\"> \n                <ul> {debitsListItems} </ul>\n            </div>\n            <form onSubmit={props.addDebit}>\n                <label htmlFor=\"description\"> Description: </label>\n                <input type=\"text\" name=\"description\"/>\n                <label htmlFor=\"amount\"> Amount: </label>\n                <input type=\"text\" name=\"amount\"/>\n                <button type =\"submit\" id=\"addButton\"> Add Debit </button>\n            </form>\n            <NavigationLinks forView=\"Debit\"/> {/* the nagivation links */}\n            <AccountBalance accountBalance={props.accountBalance}/>\n        </div>\n    );\n\n}\n\nexport default Debit;","// Credit component\nimport AccountBalance from \"./AccountBalance\";\nimport NavigationLinks from \"./NavigationLinks\";\n\nfunction Credit (props) {\n\n    // props = { addCredit: this.addCredit, credits: this.state.credits, accountBalance: this.state.accountBalance } (this refers to App component)\n    let creditListItems = props.credits.map((credit, index) => {\n        let key = \"\"\n        if (credit.id === \"\") { //if the creedit object doesn't have an id, make its index the key for mapping\n            key = index.toString()\n        }\n        else {\n            key = credit.id\n        }\n        return (<li key={key}> {credit.description} {credit.amount} {credit.date}</li>)\n    })\n    return (\n        <div className=\"Credits\">\n            <img src=\"bank.jpeg\" alt=\"bank\"/>\n            <h1> CREDITS </h1>\n            <ul> {creditListItems} </ul>\n            <form onSubmit={props.addCredit}>\n                <label htmlFor=\"description\">Description:</label>\n                <input type=\"text\" name=\"description\"/>\n                <label htmlFor=\"amount\">Amount: </label>\n                <input type=\"text\" name=\"amount\"/>\n                <button type=\"submit\"> Add Credit </button>\n            </form>\n            <NavigationLinks forView=\"Credit\" /> {/* the nagivation links */}\n            <AccountBalance accountBalance={props.accountBalance} />\n        </div>\n\n    );\n}\n\nexport default Credit;\n","\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Home from './components/Home'\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login'\nimport axios from 'axios' //library for API requests \nimport Debit from './components/Debit'\nimport Credit from './components/Credit'\n// import './App.css'\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      accountBalance: 0,\n      currentUser: {\n        userName: '',\n        memberSince: ''\n      },\n      debits: [],\n      credits: []\n    }\n  }\n\n  //Lifecycle method that is called when the component is rendered for the first time. API requests are made here to get initial debits and credits.\n  async componentDidMount() {\n\n    let debits = await axios.get(\"https://moj-api.herokuapp.com/debits\") //makes a get request to this debits API endpoint \n    let credits = await axios.get(\"https://moj-api.herokuapp.com/credits\") //makes a get request to this credits API endpoint\n\n    //Get the data from the API response objects\n    debits = debits.data //data is an array of objects that each represents a debit with properties \"id\", \"description\",  \"amount\", \"date\"\n    credits = credits.data //data is an array of objects that each represents a credit properties \"id\", \"description\",  \"amount\", \"date\"\n    \n    //    Get the sum of the debits and the sum of the credits   //\n    let debitSum = 0, creditSum = 0;\n    //For each debit object in array debits, add the value of the amount property to DebitSum\n    debits.forEach(( debit ) => {\n      debitSum+= debit.amount \n    });\n    //For each credit object in array credits, add the value of the amount property to CreditSum\n    credits.forEach(( credit ) => {\n      creditSum+= credit.amount\n    });\n\n    //Compute the account balance from the debit sum and credit sum\n    let accountBalance = (creditSum - debitSum).toFixed(2); //toFixed(2) ensures we will only have 2 decimal digits with rounding\n\n    //Update the state property accountBalance to the new calculated balance and debits and credits to the data from the API requests \n    this.setState({accountBalance, debits, credits});\n  }\n  \n\n  //Helper function that returns the date in YYYY-MM-DD format for when user adds credit or debit\n  getTodayDate = () => {\n    let today = new Date(); //date object representing today's date\n    let year = today.getFullYear().toString()\n    let month = (today.getMonth() + 1).toString() //add 1 bc 0 represents first month and 11 last month\n    if (month.length !== 2) { month = '0' + month }\n    let day = today.getDate().toString()\n    if(day.length !== 2) { day = '0' + day}\n    let date = year + '-' + month + '-' + day; // YYYY-MM-DD format\n    return (date); \n  }\n\n  //this function is called in the Login componenent and it updates the userName property of the state in this component with new username\n  mockLogIn = (logInfo) => {\n    const newUser = {...this.state.currentUser};\n    newUser.memberSince = this.getTodayDate()\n    newUser.userName = logInfo.userName;\n    this.setState({currentUser: newUser})\n  }\n\n  // The event is when the user clicks \"Add Debit\" button. \n  // The event object will contain the values of the Description input field and the Amount input field\n  addDebit = (event) => {\n    event.preventDefault(); //prevent default return behavior\n    let amount = parseFloat(event.target.amount.value) //parseFloat() method converts a string into a point number\n    let description = event.target.description.value\n    let date = this.getTodayDate()  // Gets the current date in YYYY-MM-DD format\n\n    // create new debit object to add\n    let newDebit = {\n      id: \"\",\n      amount: amount,\n      description: description,\n      date: date\n    }\n\n    let debits = [...this.state.debits]; //create a copy of the debits array \n    debits.push(newDebit); //add the newDebit object to the end of the debits array\n    let accountBalance = (this.state.accountBalance - amount).toFixed(2) //amount is the new debit amount that was specified in the Amount input field\n    \n    //Update the debits and accountBalance properties of the state with the new debit array and new balance\n    this.setState({debits: debits, accountBalance: accountBalance})\n\n  }\n\n  addCredit = (event) => {\n    event.preventDefault(); \n    let description = event.target.description.value\n    let amount = parseFloat(event.target.amount.value)\n    let date = this.getTodayDate() // Gets the current date in YYYY-MM-DD format\n\n    // create new credit object to add\n    let newCredit = {\n      id: \"\",\n      amount: amount,\n      description: description,\n      date: date\n    }\n\n    //get the new credits array and account balance after adding the new credit\n    let credits = [...this.state.credits] //creates a new array with the state's credits array \n    credits.push(newCredit) //add new credit object to the credits array\n    let accountBalance = (parseFloat(this.state.accountBalance) + newCredit.amount).toFixed(2) //new account balance\n\n    //Update the state with new credits array and account balance\n    this.setState({credits: credits, accountBalance: accountBalance})\n  }\n\n  render() { //render is called first time in the first instantiation of the component, then it is called again whenever the state updates\n     \n    // The component prop in Route won't accept a pre-built component, but React Router has provided an alternative render method/prop that will. \n    // So basically the render prop accepts a function variable that returns a pre-built componet.\n    // All we have to do is save our component as a variable like below and pass it straight in as a prop(render).\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance}/>);\n    const UserProfileComponent = () => (<UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} accountBalance={this.state.accountBalance}/>); \n    const LogInComponent = () => ( <LogIn user={this.state.currentUser} mockLogin={this.mockLogIn} />);\n    const DebitComponent = () => (<Debit addDebit = {this.addDebit} debits = {this.state.debits} accountBalance={this.state.accountBalance} />); \n    const CreditComponent = () => (<Credit addCredit={this.addCredit} credits={this.state.credits} accountBalance={this.state.accountBalance}/>);\n  \n    return (\n      //initalize a router for this component\n      <Router> \n        <div>\n          <Route exact path=\"/Bank-of-React\" render= {HomeComponent}/>  {/* Creates a route with url \"/\" at which the Home component is mounted/displayed*/}\n          <Route exact path=\"/Bank-of-React/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/Bank-of-React/login\" render={LogInComponent} />\n          <Route exact path=\"/Bank-of-React/debits\" render={DebitComponent} />\n          <Route exact path=\"/Bank-of-React/credits\" render={CreditComponent} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}